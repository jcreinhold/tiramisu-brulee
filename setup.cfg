[bumpversion]
current_version = 0.1.21
commit = True
tag = True

[bumpversion:file:setup.py]
search = version="{current_version}"
replace = version="{new_version}"

[bumpversion:file:tiramisu_brulee/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bdist_wheel]
universal = 1

[flake8]
exclude = docs
per-file-ignores =
	__init__.py: F401
max-line-length = 88
extend-ignore = E203

[aliases]
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']

[metadata]
author = Jacob Reinhold
author_email = jcreinhold@gmail.com
name = tiramisu_brulee
version = attr: tiramisu_brulee.__version__
description = A 2D and 3D PyTorch implementation of the Tiramisu CNN
long_description = file: README.rst, HISTORY.rst
keywords = tiramisu, segmentation, neural network, convolutional, pytorch
license = Apache Software License 2.0
license_file = 
url = https://github.com/jcreinhold/tiramisu-brulee
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
zip_safe = False
include_package_data = True
packages = find:
python_requires = >= 3.6
install_requires =
    torch
setup_requires =
    pytest-runner
test_suite = tests
tests_require = 
    jsonargparse
    numpy
    pandas
    pytest>=3
    pytorch-lightning
    PyYAML
    ruyaml
    scikit-image
    scipy
    SimpleITK>=2.1.0
    torchio
    torchmetrics

[options.packages.find]
include =
    tiramisu_brulee

[options.extras_require]
lesionseg = 
    jsonargparse
    numpy
    pandas
    pytorch-lightning
    PyYAML
    ruyaml
    scikit-image
    scipy
    SimpleITK>=2.1.0
    torchio
    torchmetrics
aws = mlflow

[options.entry_points]
console_scripts =
    lesion-train = tiramisu_brulee.experiment.cli.train:train
    lesion-predict = tiramisu_brulee.experiment.cli.predict:predict
    lesion-predict-image = tiramisu_brulee.experiment.cli.predict:predict_image
    train = tiramisu_brulee.experiment.cli.train:train [aws]
    serve = tiramisu_brulee.experiment.cli.predict:predict_image [aws]
